#!/bin/bash
# Title: scavenger
# Description: scavenger compares the files that have been processed to the list of files that were received from the forwarding nodes
# and processes any files that were missed on the first pass. No file gets left behind!
# Author: Andrew T. Withers

exec 2> >(sed "s/^/$(date +'%b %e %Y %T') scavenger: /" >> /var/log/artemis.err)

# Maximum number of files to recover. Leave blank to recover all
# Attempting to recover to many files at one time can result in overloading the queue
maxRecover=30

# scavenger produces stat errors when it is run concurrently with extract-cleanup; therefore
# if extract-cleanup is running, then scavenger will pause until it has finished
while [[ -n $(pgrep extract-cleanup) ]]; do
	sleep 10
done

# Ensure that artemis is running and that another instance of scavenger is not already running
if [[ -n $(pgrep -x artemis) ]] && [[ $(pgrep -c scavenger) -le 2 ]]; then
	START=$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT SUBTIME(SYSDATE(), '6:00:0');")
	END=$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT ADDTIME('$START', '05:50:00');")
	# Files that were processed
	printf "/opt/artemis/extracted/%s\n" $(mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -BN -e "SELECT FileName FROM Logs \
	WHERE DateTime > '$START';") | sort > /tmp/processed.output
	# Files that were forwarded
	find /opt/artemis/extracted/ -type f -newermt "$START" ! -newermt "$END" | sort > /tmp/forwarded.output

	# Compare the two lists of files and output the files that were not processed
	comm -13 /tmp/processed.output /tmp/forwarded.output > /tmp/missed.output

	# Process the list of files that were previously missed
	count=0
	while read line; do
		[[ -n $(mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -BN -e "SELECT FileID FROM PreQueue WHERE FileName='$line';") ]] \
		|| artemis -f "$line" && ((count+=1))
		# Stop adding files to the queue once the maxRecover limit has been met
		[[ -n $maxRecover ]] && [[ $count -ge $maxRecover ]] && break
		sleep 0.2	# Stagger file processing to prevent system overloading
	done < /tmp/missed.output

	# Cleanup
	rm /tmp/processed.output /tmp/forwarded.output /tmp/missed.output
fi
exit
