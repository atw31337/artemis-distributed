#!/bin/bash
# Title: artemisForwarder
#
#
#   ________  ________  _________  _______   _____ ______   ___  ________
#  |\   __  \|\   __  \|\___   ___\\  ___ \ |\   _ \  _   \|\  \|\   ____\
#  \ \  \|\  \ \  \|\  \|___ \  \_\ \   __/|\ \  \\\__\ \  \ \  \ \  \___|_
#   \ \   __  \ \   _  _\   \ \  \ \ \  \_|/_\ \  \\|__| \  \ \  \ \_____  \
#    \ \  \ \  \ \  \\  \|   \ \  \ \ \  \_|\ \ \  \    \ \  \ \  \|____|\  \
#     \ \__\ \__\ \__\\ _\    \ \__\ \ \_______\ \__\    \ \__\ \__\____\_\  \
#      \|__|\|__|\|__|\|__|    \|__|  \|_______|\|__|     \|__|\|__|\_________\
#                                                                  \|_________|
#
#
#
# This program is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <http://www.gnu.org/licenses/>.
#
# Author: Andrew Withers (atw127@psu.edu, atw31337@gmail.com)

exec 2> >(sed "s/^/$(date +'%b %e %Y %T'): /" >> /var/log/artemis.err)

MAXPROC=$(grep MAXPROC /etc/artemis.conf | cut -d'=' -f2)
SCANNER=$(grep SCANNER /etc/artemis.conf | cut -d'=' -f2)
USERNAME=$(grep LOG /etc/artemis.conf | cut -d'=' -f2)

autostop() {
printf "%s: Low memory detected! Emergency stop sequence activated.\n" "$(date)" >> /var/log/artemis.err
service artemis-forwarder stop
kill -9 "$(pgrep artemisForward | grep -v $BASHPID)" 2> /dev/null
exit
}


file_integrity_chk() {         # checks and, if necessary, waits for a file to finish being written to disk
local hash
while [[ "$(sha256sum $1 | cut -d' ' -f1)" != "$hash" ]] || [[ -n $(lsof $1) ]]; do
        hash="$(sha256sum $1 | cut -d' ' -f1)"
        sleep 0.1
done
}

forward() {
file_integrity_chk $1
for (( i=1; i<=10; i++ )); do
        sftp -i /root/.ssh/artemis -b <(echo $"put $1") "$USERNAME"@"$SCANNER":/opt/artemis/extracted/ > /dev/null 2>&1
        STAT=$?
        if [[ $STAT -eq  0 ]]; then
                # Remove the processes pid from /opt/artemis/workers/
		rm /opt/artemis/workers/"$BASHPID".pid
		exit
        fi
done
mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "INSERT INTO Queue (DateTime, FileName) VALUES ('$2', '$1');"
rm /opt/artemis/workers/"$BASHPID".pid
exit
}

# Set a signal trap to initiate a graceful stop
SIGNAL=0
trap "((SIGNAL++))" SIGHUP

# Ensure that the worker PID directory is empty on startup
rm /opt/artemis/workers/* > /dev/null 2>&1

while [[ $SIGNAL -eq 0 ]]; do
	if [[ $(free | grep ^Mem: | awk '{print $7}') -lt 204800 ]]; then      # If free memory drops below 200 MB, Artemis initiates an automatic stop
                autoStop
        fi
	if [[ $(mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -BN -e "SELECT COUNT(*) FROM Queue;") -ne 0  ]]; then
		FILEID=$(mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -BN -e "SELECT FileID FROM Queue ORDER BY DateTime ASC LIMIT 1;")
		FILE=$(mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -BN -e "SELECT FileName FROM Queue WHERE FileID=$FILEID;")
		TSTAMP=$(mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -BN -e "SELECT DateTime FROM Queue WHERE FileID=$FILEID;")
		mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "DELETE FROM Queue WHERE FileID=$FILEID;"
		while [[ $(ls -A /opt/artemis/workers/ | wc -l) -ge $MAXPROC ]]; do
                        sleep 0.05
                done
		if [[ -f $FILE ]]; then
			forward "$FILE" "$TSTAMP" &
			# Add the worker to the workers PID directory
                        touch /opt/artemis/workers/$!.pid
		else
			echo "$(date): $FILE - File not found! Skipping file." >> /var/log/artemis.err
		fi
	fi
done

exit
